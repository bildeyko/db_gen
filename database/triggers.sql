create or replace TRIGGER "TRG_AGE_PEOPLE" 
    BEFORE INSERT ON "PEOPLE" 
    FOR EACH ROW 
	DECLARE 
    very_small EXCEPTION;
	BEGIN 
		IF MONTHS_BETWEEN(SYSDATE,:new.DOB)<(18*12) THEN
		RAISE very_small;
		END IF;
  		EXCEPTION
  			WHEN very_small THEN RAISE_APPLICATION_ERROR(-20050,'Не достиг совершеннолетия');
  			WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20999,'OTHER ERROR');
  END;
/

create or replace TRIGGER "TRG_CONTRACTS"
	BEFORE INSERT
	ON "CONTRACTS"
	FOR EACH ROW
	DECLARE
	one_person EXCEPTION;
	error_time EXCEPTION;
	BEGIN
		IF :new.CUSTOMER_ID=:new.BROKER_ID THEN
		RAISE one_person;
		END IF;
		IF :new.END_TIME<:new.START_TIME THEN
		RAISE error_time;
		END IF;
		EXCEPTION
			WHEN error_time THEN RAISE_APPLICATION_ERROR(-20060,'Неверное время начала и/или конца контракта');
			WHEN one_person THEN RAISE_APPLICATION_ERROR(-20061,'Один и тот же человек представляет две стороны контракта');
			WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20999,'OTHER ERROR');
	END;
/

create or replace TRIGGER "TRG_POSITIONS_TIME"
	BEFORE INSERT
	ON "POSITIONS"
	FOR EACH ROW
	DECLARE
	error_time EXCEPTION;
	BEGIN
		IF :new.START_TIME>:new.END_TIME THEN
		RAISE error_time;
		END IF;
		EXCEPTION
			WHEN error_time THEN RAISE_APPLICATION_ERROR(-20070,'Закончил работать раньше, чем начал?!');
			WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20999,'OTHER ERROR');
	END;
/


create or replace TRIGGER "TRG_POSITIONS_DOUBlE"
	BEFORE INSERT
	ON "POSITIONS"
	FOR EACH ROW
	DECLARE
	two_positions EXCEPTION;
  	test NUMBER;
	BEGIN
		SELECT COUNT(*) INTO test FROM POSITIONS
		WHERE STAFF_ID=:new.STAFF_ID AND (END_TIME>:new.START_TIME OR START_TIME<:new.END_TIME OR (:new.START_TIME>START_TIME AND :new.END_TIME<END_TIME));
		IF test<>0 THEN
		RAISE two_positions;
		END IF;
		EXCEPTION
			WHEN two_positions THEN RAISE_APPLICATION_ERROR(-20071,'две должности одновременно!');
			WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20999,'OTHER ERROR');
	END;
/

create or replace TRIGGER "TRG_SHELF_LIFE"
	BEFORE INSERT
	ON "PRODUCT_ITEMS"
	FOR EACH ROW
	DECLARE
	end_shelf_life EXCEPTION;
	BEGIN
		IF SYSDATE>:new.SHELF_LIFE THEN
		RAISE end_shelf_life;
		END IF;
		EXCEPTION
			WHEN end_shelf_life THEN RAISE_APPLICATION_ERROR(-20071,'Истек срок годности');
			WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20999,'OTHER ERROR');
	END;